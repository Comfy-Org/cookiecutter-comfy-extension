[build-system]
requires = ["setuptools>=70.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
authors = [
  {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"}
]
readme = "README.md"
license = {text = "{{cookiecutter.open_source_license}}"}
requires-python = ">=3.10"
classifiers = []
dependencies = [

]



[project.optional-dependencies]
dev = [
    "bump-my-version",
    "coverage",  # testing
    "mypy",  # linting
    "pre-commit", # runs linting on commit
    "pytest",  # testing
    "ruff",  # linting
]

[project.urls]
Repository = "https://github.com/{{cookiecutter.__gh_slug}}"
BugTracker = "https://github.com/{{cookiecutter.__gh_slug}}/issues"
Documentation = "https://github.com/{{cookiecutter.__gh_slug}}/wiki"


[tool.comfy]
PublisherId = "{{cookiecutter.github_username}}"
DisplayName = "{{cookiecutter.project_name}}"
Icon = ""
Tags = []
Repository = "https://github.com/{{cookiecutter.__gh_slug}}"
{% if cookiecutter.frontend_type == 'react' -%}
includes = ["dist/"]
{%- elif cookiecutter.frontend_type == 'vue' -%}
includes = ["js"]
{%- else %}
includes = []
{%- endif %}

[tool.setuptools.package-data]
"*" = ["*.*"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = [
    "tests",
]

[tool.mypy]
files = "."

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[[tool.mypy.overrides]]
# Don't require test functions to include types
module = "tests.*"
allow_untyped_defs = true
disable_error_code = "attr-defined"

[tool.ruff]
# extend-exclude = ["static", "ci/templates"]
line-length = 140
src = ["src", "tests"]
target-version = "py39"

# Add rules to ban exec/eval
[tool.ruff.lint]
select = [
    "S102",  # exec-builtin
    "S307",  # eval-used
    "W293",
    "F",  # The "F" series in Ruff stands for "Pyflakes" rules, which catch various Python syntax errors and undefined names.
    # See all rules here: https://docs.astral.sh/ruff/rules/#pyflakes-f
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"
